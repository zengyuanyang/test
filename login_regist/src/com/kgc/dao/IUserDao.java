package com.kgc.dao;

import com.kgc.pojo.User;

/**
 * 限制实现类的参数和方法名称。
 * 协同开发：因为在写实现方法的过程中可能会耽误时间，但是大家都是共同开发的，那么我就不能等A做完以后我在去开展我的工作，因为会浪费时间。
 * 		用户方法有100个而我现在只写到10个，而赵茂源支付功能1个，那么我的100个方法不写完，赵茂源无法进行支付方法的书写。
 * 		想一个解决办法，周奎和赵茂源同时进行，互不干扰。
 * 	怎么办？
 * 		接口的好处就体现出来，但是如果我只写方法的定义，不考虑实现，那么速度是不是就很快。
 * 		因为多态里面说了，可以通过接口new实现，最终是不是会去调用时限内里面的功能。这样的话就算周奎没有写查询余额功能，但是不影响到赵茂源的方法书写。
 * 可扩展性：jdk动态代理。如果我想生成代理类，那么我就必须写接口，以后为了方便解耦。
 * 
 * 这是针对用户操作的接口
 *  以后再写实体类的操作方法的时候记住一定要先写接口，再去写实现类
 * 		
 * @author lei
 *
 */
public interface IUserDao {
	/**
	 * 这是用户的登录功能
	 * @param userName 账户
	 * @param userPwd 密码
	 * @return 是否成功
	 */
	public boolean isLogin(String userName , String userPwd);
	/**
	 * 用户注册功能
	 * @param user 用户的基本信息对象
	 */
	public void regist(User user);
	
}
